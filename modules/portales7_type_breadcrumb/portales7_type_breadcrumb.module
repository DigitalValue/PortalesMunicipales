<?php

/**
 * Implements hook_field_formatter_info()
 *
 * @todo What's the imagecache thing doing?
 */
function portales7_type_breadcrumb_field_formatter_info() {
  $formatters = array(
    'portales7_breadcrumb_default' => array(
      'label' => t('Portales 7 type breadcrumb'),
      'field types' => array('taxonomy_term_reference'),
      'description' => t('Displays a breadcrumb based on type taxonomy hierarchy.'),
      'settings' => array(
        'parent' => 0,
      ),
    ),
  );

  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function portales7_type_breadcrumb_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  //This gets the view_mode where our settings are stored
  $display = $instance['display'][$view_mode];
  //This gets the actual settings
  $settings = $display['settings'];
  //Initialize the element variable
  $element = array();
  //Add your select box
  $element['parent'] = array(
    '#type'           => 'textfield',                           // Use a select box widget
    '#title' => t('Parent'),
    '#description' => t('Parent term for type breadcrumb. It will not be included on the breadcrumb.'),
    '#default_value' => $settings['parent'],
    '#required' => TRUE,
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function portales7_type_breadcrumb_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $summary = t('Display a breadcrumb based on field type hierarchy');
  return $summary;
}


/**
 * Implements hook_field_formatter_view().
 */
function portales7_type_breadcrumb_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  return array(array('#markup'  => join(' > ', _portales7_type_breadcrumb_get_trail($display['settings']['parent'],$items, TRUE))));
}

function _portales7_type_breadcrumb_get_trail($needle, $haystack, $include_home = FALSE){
  $trail = array();
  foreach ($haystack as $item) {
    $newtrail = array();
    foreach (taxonomy_get_parents_all($item['tid']) as $t){
      if ($t->tid == $needle) {
        if (count($newtrail) > count($trail)) $trail = $newtrail;
        break;
      }
      else {
        if (($alias = drupal_get_path_alias('taxonomy/term/'. $t->tid))==FALSE) {
          $alias = 'taxonomy/term/' . $t->tid;
        }
        #$output = l($t->name, $output);
        $output = "<a href=\"$alias\">{$t->name}</a>";
        array_unshift($newtrail, $output);
      }
    }
  }
  if ($include_home) array_unshift($trail, l(t('Home'),'<front>'));
  return $trail;
}

function _portales7_type_breadcrumb_get_entity($tid){
  return entity_load('taxonomy_term',array($tid));
}
/**
* Implementation of hook_ctools_plugin_dierctory() to let the system know
* where our content_type plugins are.
*/
function portales7_type_breadcrumb_ctools_plugin_directory($module, $plugin) {
    if ($module == 'ctools') {
        return 'plugins/' . $plugin;
    }
}

function portales7_type_breadcrumb_preprocess_page(&$variables) {
  global $language;
  if (!empty($variables['node'])) {
    $parent = variable_get('portales7_type_breadcrumb_parent',0);
    $parent2 = variable_get('portales7_type_breadcrumb_parent2',0);
    $node = $variables['node'];
    $trail = array();
    if (!empty($node->field_type[$language->language])){
      $trail = _portales7_type_breadcrumb_get_trail($parent, $node->field_type[$language->language]);
      if ($parent2 != 0) {
        $trail2 = _portales7_type_breadcrumb_get_trail($parent2, $node->field_type[$language->language]);
        $trail = array_merge($trail, $trail2);
      }
    }
    else if (!empty($node->field_type['und'])){
      $trail = _portales7_type_breadcrumb_get_trail($parent, $node->field_type['und']);
      if ($parent2 != 0) {
        $trail2 = _portales7_type_breadcrumb_get_trail($parent2, $node->field_type['und']);
        $trail = array_merge($trail, $trail2);
      }
    }
    array_unshift($trail, l(t('Home'),'<front>'));
    drupal_set_breadcrumb($trail);
  }  
}

function portales7_type_breadcrumb_admin(&$form, &$form_state) {
  $form['portales7_type_breadcrumb_parent'] = array(
    '#type'           => 'textfield',                           // Use a select box widget
    '#title' => t('Parent'),
    '#description' => t('Parent term for type breadcrumb. It will not be included on the breadcrumb.'),
    '#default_value' => variable_get('portales7_type_breadcrumb_parent',0),
    '#required' => TRUE,
  );
  $form['portales7_type_breadcrumb_parent2'] = array(
    '#type'           => 'textfield',                           // Use a select box widget
    '#title' => t('Parent'),
    '#description' => t('Second parent term for type breadcrumb. It will not be included on the breadcrumb.'),
    '#default_value' => variable_get('portales7_type_breadcrumb_parent2',0),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

function portales7_type_breadcrumb_menu() {
  $items['admin/portales7/type-breadcrumb'] = array(
    'title' => t('Type breadcrumb'),
    'description' => t('Settings for type breadcrumb'),
    'page arguments' => array('portales7_type_breadcrumb_admin'),
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer portales7'),
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}
